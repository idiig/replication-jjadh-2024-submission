#| label: libraries
library(tidyverse)
#| label: libraries
library(tidyverse)
library(knitr)
library(rstatix)
library(ggplot2)
library(ggpubr)
#| label: themes
theme_set_b <- function() {
theme_void() +  # 使用 ggplot2 提供的 theme_void
theme(
strip.background = element_rect(
color = "white",  # 给所有操作符添加空格
fill = "white"
),
panel.grid.major.y = element_line(
color = "gray80",
linetype = "solid"
),
strip.text = element_text(
color = "black",
size = rel(1),
angle = 90,
vjust = 0.5,
hjust = 1
),
axis.text.y = element_text(
color = "black"
),
strip.text.y.left = element_text(
angle = 180
),
axis.title.x = element_text(
size = rel(1.3)
),
axis.title.y = element_text(
size = rel(1.3),
angle = 90,
vjust = 0.5
),
legend.position = "bottom",
legend.title = element_text(
size = rel(0.5),
face = "bold"
)
)
}
#| label: tbl-data-raw
#| tbl-cap: 追加率の計算結果
data <- system(
"
echo \"Translator,PoemID,opN,opE,opF,opG,opT,opU,ctN,ctE,ctA,ctFG,ctU,ctD,Theoretical,Gap\" >\\
artifacts/data.csv
cat ./data/calcResidual/gistfile1.txt |\\
sed \'s/[=:()]/ /g\' |\\
awk \'{print $2,$3,$5,$6,$7,$8,$9,$10,$12,$13,$14,$15,$16,$17,$18,$19}\' OFS=\",\" >>\\
artifacts/data.csv
"
)
data <- read.csv("artifacts/data.csv") |>
mutate(
AdditionRate = ctU + ctD,
Translator = as.factor(Translator),
Policy = case_when(
Translator %in% c(
"kaneko",
"kubota",
"katagiri"
) ~ "Text-orientated",
Translator %in% c(
"okumura",
"takeoka"
) ~ "Intension-orientated",
Translator %in% c(
"ozawa",
"kyusojin"
) ~ "Readability-orientated",
Translator %in% c(
"matsuda",
"kojimaarai",
"komachiya"
) ~ "Unknown",
),
Policy = factor(
Policy,
levels = c(
"Text-orientated",
"Intension-orientated",
"Readability-orientated",
"Unknown"
)
)
) |>
select(
Translator,
PoemID,
Policy,
AdditionRate
)
data |> group_by(Policy) |>
get_summary_stats(
AdditionRate,
type = "mean_sd"
)
data |>
arrange(Policy) |>
ggbarplot(
x = "Policy",
y = "AdditionRate",
add = c("mean_se"),
fill = "Policy",
color = "black",
palette = "Blues",
position = position_dodge(.6)
) +
xlab("") +
labs(
color = "Policy"
) +
theme_set_b() +
theme(axis.text.x = element_text(face = "italic"))
data |> group_by(Translator) |>
get_summary_stats(
AdditionRate,
type = "mean_sd"
) |>
kable()
data |> group_by(Translator) |>
get_summary_stats(
AdditionRate,
type = "mean_sd"
)
data |> group_by(Translator) |>
get_summary_stats(
AdditionRate,
type = "mean_sd"
)
```
#| label: tbl-data-raw
#| tbl-cap: 追加率の計算結果
data <- system(
"
echo \"Translator,PoemID,opN,opE,opF,opG,opT,opU,ctN,ctE,ctA,ctFG,ctU,ctD,Theoretical,Gap\" >\\
artifacts/data.csv
cat ./data/calcResidual/gistfile1.txt |\\
sed \'s/[=:()]/ /g\' |\\
awk \'{print $2,$3,$5,$6,$7,$8,$9,$10,$12,$13,$14,$15,$16,$17,$18,$19}\' OFS=\",\" >>\\
artifacts/data.csv
"
)
data <- read.csv("artifacts/data.csv") |>
mutate(
AdditionRate = ctU + ctD,
Translator = as.factor(Translator),
Policy = case_when(
Translator %in% c(
"kaneko",
"kubota",
"katagiri"
) ~ "Text-orientated",
Translator %in% c(
"okumura",
"takeoka"
) ~ "Intension-orientated",
Translator %in% c(
"ozawa",
"kyusojin"
) ~ "Readability-orientated",
Translator %in% c(
"matsuda",
"kojimaarai",
"komachiya"
) ~ "Unknown",
),
Policy = factor(
Policy,
levels = c(
"Text-orientated",
"Intension-orientated",
"Readability-orientated",
"Unknown"
)
)
) |>
select(
Translator,
PoemID,
Policy,
AdditionRate
)
data |> group_by(Policy) |>
get_summary_stats(
AdditionRate,
type = "mean_sd"
)
data |>
arrange(Policy) |>
ggbarplot(
x = "Policy",
y = "AdditionRate",
add = c("mean_se"),
fill = "Policy",
color = "black",
palette = "Blues",
position = position_dodge(.6)
) +
xlab("") +
labs(
color = "Policy"
) +
theme_set_b() +
theme(axis.text.x = element_text(face = "italic"))
data |> group_by(Translator) |>
get_summary_stats(
AdditionRate,
type = "mean_sd"
)
data |> group_by(Policy) |>
get_summary_stats(
AdditionRate,
type = "mean_sd"
)
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
#| label: libraries
library(tidyverse)
library(knitr)
library(rstatix)
library(ggplot2)
library(ggpubr)
#| label: themes
theme_set_b <- function() {
theme_void() +  # 使用 ggplot2 提供的 theme_void
theme(
strip.background = element_rect(
color = "white",  # 给所有操作符添加空格
fill = "white"
),
panel.grid.major.y = element_line(
color = "gray80",
linetype = "solid"
),
strip.text = element_text(
color = "black",
size = rel(1),
angle = 90,
vjust = 0.5,
hjust = 1
),
axis.text.y = element_text(
color = "black"
),
strip.text.y.left = element_text(
angle = 180
),
axis.title.x = element_text(
size = rel(1.3)
),
axis.title.y = element_text(
size = rel(1.3),
angle = 90,
vjust = 0.5
),
legend.position = "bottom",
legend.title = element_text(
size = rel(0.5),
face = "bold"
)
)
}
reticulate::repl_python()
